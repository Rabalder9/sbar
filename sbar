#!/bin/dash

# INIT
printf "$$" > ~/.cache/pidofbar
sec=0

# MODULES
update_cpu () { 
    read -r cputemp </sys/class/thermal/thermal_zone2/temp
    cpu="CPU: $((cputemp/1000))°"
}

update_time () { 
	time="$(date "+[%d/%m-%y] [%R]")" 
}


update_bat () { 
	read -r bat_status </sys/class/power_supply/BAT0/status
	read -r bat_capacity </sys/class/power_supply/BAT0/capacity
#	bat="$bat_status: $bat_capacity%"
    [ "$bat_status" = "Full" ] && bat=" $bat_capacity%"
    [ "$bat_status" = "Discharging" ] && bat=" $bat_capacity%"
    [ "$bat_status" = "Charging" ] && bat=" $bat_capacity%"
}

update_vol () {
    vol="$([ "$(pamixer --get-mute)" = "false" ] && printf '墳 ' || printf '婢 ')$(pamixer --get-volume)%"
}

#update_vol () { 
#    vol="$([ "$(amixer -D pulse get Master | awk -F 'Left:|[][]' 'BEGIN {RS=""}{ print $5 }') = "off" ] && printf ' muted' || printf '')$(amixer -D pulse get Master | awk -F 'Left:|[][]' 'BEGIN {RS=""}{ print $3 }')%"
#}

update_backlight () { 
	# you might need to change the path depending on your device
	read -r actual_brightness </sys/class/backlight/intel_backlight/actual_brightness
	read -r max_brightness </sys/class/backlight/intel_backlight/max_brightness
	backlight="☀ $((actual_brightness*100/max_brightness))%"
}


# modules that don't update on their own need to be run at the start for getting their initial value
update_vol
update_backlight

display () { 
	xsetroot -name " [$cpu] [$vol] [$bat] [$backlight] $time "
}

# SIGNALLING
# trap	"<function>;display"		"RTMIN+n"
trap	"update_vol;display"		"RTMIN+10"
trap	"update_backlight;display" 	"RTMIN+1"
trap	"update_bat;display" 		"RTMIN+2"
# to update it from external commands
## kill -m "$(cat ~/.cache/pidofbar)"
# where m = 34 + n

while true
do
	sleep 1 & wait && { 
		# to update item ever n seconds with a offset of m
		## [ $((sec % n)) -eq m ] && udpate_item
		[ $((sec % 20 )) -eq 0 ] && update_time 	# update time every 20 seconds
		[ $((sec % 20)) -eq 0 ] && update_cpu 	# update cpu every 15 seconds
		[ $((sec % 60)) -eq 0 ] && update_bat

		# how often the display updates ( 5 seconds )
		[ $((sec % 20 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done 


